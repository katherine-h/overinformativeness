// run using:
// webppl runOverinformativenessModel-loadtypicalities.wppl --require ./refModule/
var getTypicalities = function() {
    var typicalityData = refModule.readCSV("./bdaInput/typicalities_raw.csv");
    // console.log(typicalityData);
    var unique_objects = _.unique(map(function(row) {
      return row[0];
    },typicalityData));

    var typicalities = [];
    // console.log(unique_objects);
    var consData = map(function(unique_obj) {
      // console.log(unique_obj);
      // var typ = function(row) {
      //   return (row[0] === unique_obj);
      // };
      // console.log(typ(typicalityData[2]));
      var matching_objs = refModule.getTypSubset(typicalityData,unique_obj);
      // var matching_objs = _.filter(typicalityData,typ);
      // console.log("an object");
      // console.log(matching_objs);

      // return matching_objs;

    // return _.filter(typicalityData,typ);
      var mo_array = map(function(matching_obj) {
        // console.log("an object's unique utterance");
        // console.log(matching_obj.slice(1,3));
        
          // return _.object([matching_obj[2]],[matching_obj[1]]);
          return matching_obj.slice(1,3);
      },matching_objs);
      // console.log("a zipped array of typicalities and utterances");
      // console.log(_.invert(_.object(mo_array)));
      // console.log(unique_obj);
      // console.log(_.object([unique_obj,_.invert(_.object(mo_array))]));
      return [unique_obj,_.invert(_.object(mo_array))];
    }, unique_objects);

    // // return typicalities;
    return _.object(consData);
};

var typicality_norms = getTypicalities();
// console.log(typicality_norms);

// contexts in Fig 1a in paper
var context = [
  ["size","blue","thumbtack"],
  ["othersize","blue","thumbtack"],
  ["othersize","red","thumbtack"]
];

// contexts in Fig 1b in paper
//   var context = [
//     ["size","blue","thumbtack"],
//     ["size","red","thumbtack"],
//     ["othersize","red","thumbtack"]
// ];

var typtype = "unlogged";
// var typtype = "logged";
var searchtype = "wide";
// var searchtype = "narrow";

// var alphas = [27,28,29,30];
// var lengthWeights = [0,.5,1,1.5,2];
// var typicality_colors = [.95,.999];
// var typicality_sizes = [.7, .8, .9];
// var cost_colors = [0,.1,.2];
// var cost_sizes = [0,.1,.2];

var alphas = [5,10,15,20,25,30,35];
var lengthWeights = [0];//[0,1,2,3,4,5];
var typicality_colors = [.001,.1,.2,.3,.4,.5,.6,.7,.8,.9,.999];
var typicality_sizes = [.001,.1,.2,.3,.4,.5,.6,.7,.8,.9,.999];
var cost_colors = [0];
var cost_sizes = [0];


// var params = {
//   alpha : 1,
//   lengthWeight : 0,
//   typicality_color : .999,
//   typicality_size : .999,
//   typicality_type : .999,
//   // typWeight : 1,
//   cost_color : 1,
//   cost_size : 1,
//   cost_type : 1
// };

// special typicality case:

  // var context = [
  // 	["size","blue","golfball"],
  //   // ["size","blue","golfball"],
  //   // ["size","blue","golfball"],
  //   ["othersize","blue","golfball"],
  //   // ["othersize","blue","golfball"],
  //   // ["othersize","blue","golfball"],
  // 	// ["othersize","blue","golfball"]
  //   // ["othersize","pink","golfball"]
  //   ["othersize","pink","golfball"],
  //   ["othersize","pink","golfball"],    
  //   ["othersize","pink","golfball"]
  //   // ["othersize","blue","golfball"],
  //   // ["othersize","blue","golfball"]
  // ];


  // var model = OverinformativeModel(params,context,typicality_norms);

// var models = [];
// var paramsets = [];

  map(function(al) {
    console.log("next alpha: "+al);
    map(function(le) {
      map(function(tc) {
        console.log("color fidelity: "+tc);
        map(function(ts) {
          map(function(cc) {
            map(function(cs) {  
              // models.push(OverinformativeModel({
                var model = OverinformativeModel({
                                alpha : al,
                                lengthWeight : le,
                                typicality_color : tc,
                                typicality_size : ts,
                                typicality_type : .999,
                                cost_color : cc,
                                cost_size : 1,
                                cost_type : 1},
                                context,typicality_norms);
              // paramsets.push([al,le,tc,ts,cc,cs]);


// map(function(m) {
              var runModel = model.runModel;
              var speaker = model.speaker;
              var listener = model.listener;
              var runListener = model.runListener;
//   // var modelOutput = runModel(speaker, ["size","blue","golfball"]);
//   // var modelOutput = runModel(speaker, ["othersize","pink","golfball"]);
//   // var modelOutput = runModel(speaker, ["size","green","avocado"]);
//   // var modelOutput = runModel(speaker, ["othersize","black","avocado"]);
//   // var utts = ["golfball","size_golfball","blue_golfball","size_blue_golfball"];
//   // map(function(utt) {
//   //   var listenerOutput = runListener(listener, utt);
//   //   // console.log(listenerOutput);
//   //   refModule.writeERP(listenerOutput, [utt], "results_model/data/listener.csv",2);
//   // },utts);

//   // map(function(c) {
//     // var modelOutput = runModel(speaker, c);
//     // console.log(modelOutput);
//     // refModule.writeERP(modelOutput, [c], "results_model/data/speaker.csv",2);
//   // },context);
//   // var modelOutput = runModel(speaker, ["size","blue","golfball"]);
  
// qualitative effects for paper (modeling section)
            // write listener results
              var utts = ["thumbtack","size_thumbtack","blue_thumbtack","size_blue_thumbtack","othersize_thumbtack","red_thumbtack","othersize_red_thumbtack","othersize_blue_thumbtack"];
              map(function(utt) {
                var listenerOutput = runListener(listener, utt);
                // console.log(listenerOutput);
                refModule.writeERP(listenerOutput, [al,le,tc,ts,cc,cs,utt], "results_model/data/listener_"+typtype+"_"+searchtype+".csv",2);
                // refModule.writeERP(listenerOutput, m.params, "results_model/data/listener.csv",2);
              },utts);
              
              // write speaker results (size sufficient)
              var modelOutput = runModel(speaker, ["size","blue","thumbtack"]);
              refModule.writeERP(modelOutput, [al,le,tc,ts,cc,cs,"size_sufficient"], "results_model/data/speaker_"+typtype+"_"+searchtype+".csv",2);            
              // refModule.writeERP(modelOutput, m.params, "results_model/data/speaker.csv",2);            
              // write speaker results (color sufficient)
              var modelOutput = runModel(speaker, ["othersize","red","thumbtack"]);
              refModule.writeERP(modelOutput, [al,le,tc,ts,cc,cs,"color_sufficient"], "results_model/data/speaker_"+typtype+"_"+searchtype+".csv",2);                        
            // refModule.writeERP(modelOutput, m.params, "results_model/data/speaker.csv",2);                          
              // console.log(modelOutput);
            // }, models);

            }, cost_sizes);          
          }, cost_colors);
        }, typicality_sizes);
      }, typicality_colors);
    }, lengthWeights);
  }, alphas);
