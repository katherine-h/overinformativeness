// run using:
// webppl runOverinfModel.wppl --require ./refModule/

// contexts for color predictability effect

var contexts = [{condition:"informative_atypical",
                 context: [["blue", "banana"],
                 ["yellow","apple"],
                 ["yellow","apple"],
                 ["yellow", "cup"],
                 ["yellow", "banana"]]},

                {condition:"informative_typical",
                 context:[["yellow", "banana"],
                 ["blue","apple"],
                 ["blue","apple"],
                 ["blue", "cup"],
                 ["blue", "banana"]]},

                {condition:"overinformative_atypical",
                 context:[["blue", "banana"],
                  ["yellow","apple"],
                 ["yellow","apple"],
                 ["yellow", "cup"],
                 ["yellow", "apple"]]},

                {condition:"overinformative_typical",
                 context:[["yellow", "banana"],
                 ["blue","apple"],
                 ["blue","apple"],
                 ["blue", "cup"],
                 ["blue", "apple"]]},

                {condition:"color_competitor_overinformative_atypical",
                 context:[["blue", "banana"],
                 ["yellow","apple"],
                 ["yellow","apple"],
                 ["blue", "cup"],
                 ["yellow", "apple"]]},

                {condition:"color_competitor_overinformative_typical",
                 context:[["yellow", "banana"],
                 ["blue","apple"],
                 ["blue","apple"], 
   			   	  	 ["yellow", "cup"],
							   ["blue", "apple"]]}
                ];				 
/*var contexts = [["yellow", "banana"],
                 ["blue", "cup"],
                 ["blue", "banana"]];   */      


/*var params = {
	// speaker optimality parameter
  alpha : 13,
  // alpha : 5,
  // alpha : 20,
  lengthWeight : 5,
  u_banana_o_yellow_banana : .9,
  u_banana_o_blue_banana : .3,
  u_cup_o_yellow_cup : .9,
  u_cup_o_blue_cup : .9,
  u_apple_o_yellow_apple : .9,
  u_apple_o_blue_apple : .3,
  // cost_color : .6,
  // cost_type : .3
  cost_color : 1,
  cost_type : 1
};*/
// map(function(context) { 
//   var model = OverinformativeModel(params,context);
//   var runModel = model.runModel;
//   var speaker = model.speaker;
//   var listener = model.listener;
//   var runListener = model.runListener;
//   console.log("");
//   console.log("Speaker: ");
//   console.log(runModel(speaker,context[0]));
//   console.log("Listener Banana: ");
//   console.log(runListener(listener,"banana"));
//   console.log("Listener Yellow Banana: ");
//   console.log(runListener(listener,"yellow_banana"));
// }, contexts);


var alphas = [5,10,13,20,30];
var lengthWeights = [0,5,10,20];
var u_banana_o_yellow_bananas = [.9];
var u_banana_o_blue_bananas = [.3];
// var u_banana_o_yellow_bananas = [3];
// var u_banana_o_blue_bananas = [1];
var u_cup_o_yellow_cups = [.9];
var u_cup_o_blue_cups = [.9];
var u_apple_o_yellow_apples = [.9];
var u_apple_o_blue_apples = [.3];
var cost_colors = [.3,.6,1,1.2];
var cost_types = [1,.6,.3];


map(function(al) {
  console.log("next alpha: "+al);
  map(function(le) {
    map(function(by) {
      map(function(bb) {
        map(function(cy) {
          map(function(cb) {
            map(function(ay) {
              map(function(ab) {
                map(function(cc) {
                  map(function(ct) {  
                    map(function(context) {
                      var model = OverinformativeModel({
                          alpha : al,
                          lengthWeight : le,
                          u_banana_o_yellow_banana : by,
                          u_banana_o_blue_banana : bb,
                          u_cup_o_yellow_cup : cy,
                          u_cup_o_blue_cup : cb,
                          u_apple_o_yellow_apple : ay,
                          u_apple_o_blue_apple : ab,
                          cost_color : cc,
                          cost_type : ct},
                          context.context);
                      var runModel = model.runModel;
                      var speaker = model.speaker;
                      var listener = model.listener;
                      var runListener = model.runListener;

                      // write listener results
                      var utts = [/*"yellow","blue",*/"yellow_banana","blue_banana","banana"/*,"yellow_cup","blue_cup","cup","yellow_apple","blue_apple","apple"*/];
                      map(function(utt) {
                        var listenerOutput = runListener(listener, utt);
                        refModule.writeERP(listenerOutput, [al,le,by,bb,cy,cb,ay,ab,cc,ct,context.condition,utt], "results_wppl/data/listener_exploration.csv",2);
                      },utts);
                      // // write speaker results (color sufficient)
                      var modelOutput = runModel(speaker, context.context[0]);
                      refModule.writeERP(modelOutput, [al,le,by,bb,cy,cb,ay,ab,cc,ct,context.condition], "results_wppl/data/speaker_exploration.csv",2);                        
                      // refModule.writeERP(modelOutput, [al,le,by,bb,cy,cb,ay,ab,cc,ct,context.condition], "results_wppl/data/speaker_exploration_coloronly.csv",2);                        
                    }, contexts);
                  }, cost_types);          
                }, cost_colors);
              }, u_apple_o_blue_apples);
            }, u_apple_o_yellow_apples);
          }, u_cup_o_blue_cups);                
        }, u_cup_o_yellow_cups);
      }, u_banana_o_blue_bananas);
    }, u_banana_o_yellow_bananas);
  }, lengthWeights);
}, alphas);












